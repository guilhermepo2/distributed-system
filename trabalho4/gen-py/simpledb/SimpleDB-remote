#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from simpledb import SimpleDB
from simpledb.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  File get(string url)')
  print('   get_list(string url)')
  print('  version_t add(string url, string content)')
  print('  version_t update(string url, string content)')
  print('  File delete_file(string url)')
  print('  version_t update_with_version(string url, string content, version_t version)')
  print('  File delete_with_version(string url, version_t version)')
  print('  void update_server()')
  print('  File get_v(string url_v, string url)')
  print('  version_t add_tw(string url, string content)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = SimpleDB.Client(protocol)
transport.open()

if cmd == 'get':
  if len(args) != 1:
    print('get requires 1 args')
    sys.exit(1)
  pp.pprint(client.get(args[0],))

elif cmd == 'get_list':
  if len(args) != 1:
    print('get_list requires 1 args')
    sys.exit(1)
  pp.pprint(client.get_list(args[0],))

elif cmd == 'add':
  if len(args) != 2:
    print('add requires 2 args')
    sys.exit(1)
  pp.pprint(client.add(args[0],args[1],))

elif cmd == 'update':
  if len(args) != 2:
    print('update requires 2 args')
    sys.exit(1)
  pp.pprint(client.update(args[0],args[1],))

elif cmd == 'delete_file':
  if len(args) != 1:
    print('delete_file requires 1 args')
    sys.exit(1)
  pp.pprint(client.delete_file(args[0],))

elif cmd == 'update_with_version':
  if len(args) != 3:
    print('update_with_version requires 3 args')
    sys.exit(1)
  pp.pprint(client.update_with_version(args[0],args[1],eval(args[2]),))

elif cmd == 'delete_with_version':
  if len(args) != 2:
    print('delete_with_version requires 2 args')
    sys.exit(1)
  pp.pprint(client.delete_with_version(args[0],eval(args[1]),))

elif cmd == 'update_server':
  if len(args) != 0:
    print('update_server requires 0 args')
    sys.exit(1)
  pp.pprint(client.update_server())

elif cmd == 'get_v':
  if len(args) != 2:
    print('get_v requires 2 args')
    sys.exit(1)
  pp.pprint(client.get_v(args[0],args[1],))

elif cmd == 'add_tw':
  if len(args) != 2:
    print('add_tw requires 2 args')
    sys.exit(1)
  pp.pprint(client.add_tw(args[0],args[1],))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
